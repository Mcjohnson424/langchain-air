# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --mode=skip-build
      - name: Check formatting
        run: yarn run format:check

  lint:
    name: Check linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --mode=skip-build
      - name: Check linting
        run: yarn run lint

  build:
    name: Build and check types
    runs-on: ubuntu-latest
    env:
      PUPPETEER_SKIP_DOWNLOAD: "true"
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build and check types
        run: yarn run build

  test:
    name: Unit Tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x, 19.x, 20.x]
        # See Node.js release schedule at https://nodejs.org/en/about/releases/
        include:
          - os: windows-latest
            node-version: 20.x
          - os: macos-latest
            node-version: 20.x
    runs-on: ${{ matrix.os }}
    env:
      PUPPETEER_SKIP_DOWNLOAD: "true"
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn run build --filter="!docs"
      - name: Test
        run: yarn run test:unit --filter="!test-exports-cra"
        # test-exports-cra is still run in test-exports task, currently not
        # compatible with Node.js 20.x, so disabling here
        # Note it is useful to run the others here in addition to test-exports
        # because it would catch any issues that only manifest
        # when optional peer deps are installed

  test-exports:
    name: Environment Tests
    runs-on: ubuntu-latest
    env:
      PUPPETEER_SKIP_DOWNLOAD: "true"
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn workspace langchain build
      - name: Test Exports
        run: yarn run test:exports:docker
